/*
 * JS for mapPage generated by Appery.io
 *
 */

Appery.getProjectGUID = function() {
    return 'abfa3b56-b56f-4a15-ac55-911de764ccdf';
}

function navigateTo(outcome, useAjax) {
    Appery.navigateTo(outcome, useAjax);
}

// Deprecated


function adjustContentHeight() {
    Appery.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Appery.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Appery.setDetailContent(pageUrl);
}

Appery.AppPages = [{
    "name": "mapPage",
    "location": "mapPage.html"
}, {
    "name": "activityDetail",
    "location": "activityDetail.html"
}, {
    "name": "profile",
    "location": "profile.html"
}];

mapPage_js = function(runBeforeShow) { /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'btnSettings': 'mapPage_btnSettings',
        'btnSearch': 'mapPage_btnSearch',
        'googlemap_1': 'mapPage_googlemap_1',
        'marker_2': 'mapPage_marker_2',
        'mobileSearchbar': 'mapPage_mobileSearchbar',
        'lblResults': 'mapPage_lblResults',
        'grdResult': 'mapPage_grdResult',
        'mobilegridcell_8': 'mapPage_mobilegridcell_8',
        'lblActivityName': 'mapPage_lblActivityName',
        'lblDescription': 'mapPage_lblDescription',
        'lblAgeRange': 'mapPage_lblAgeRange',
        'mobilegridcell_9': 'mapPage_mobilegridcell_9',
        'imgActivity': 'mapPage_imgActivity',
        'lblActivityType': 'mapPage_lblActivityType',
        'mobilegridcell_10': 'mapPage_mobilegridcell_10',
        'lblVenueName': 'mapPage_lblVenueName',
        'mobilegridcell_11': 'mapPage_mobilegridcell_11',
        'lblNada': 'mapPage_lblNada',
        'btnCloseSettings': 'mapPage_btnCloseSettings',
        'mobilelist_31': 'mapPage_mobilelist_31',
        'lstProfile': 'mapPage_lstProfile',
        'mobilelistitembutton_33': 'mapPage_mobilelistitembutton_33',
        'mobilelistitem_34': 'mapPage_mobilelistitem_34',
        'mobilelistitembutton_35': 'mapPage_mobilelistitembutton_35',
        'mobilelistitem_36': 'mapPage_mobilelistitem_36',
        'mobilelistitembutton_37': 'mapPage_mobilelistitembutton_37',
        'mobilelistitem_38': 'mapPage_mobilelistitem_38',
        'mobilelistitembutton_39': 'mapPage_mobilelistitembutton_39',
        'mobilelabel_78': 'mapPage_mobilelabel_78',
        'btnCloseSearch': 'mapPage_btnCloseSearch',
        'gridCriteria': 'mapPage_gridCriteria',
        'mobilegridcell_42': 'mapPage_mobilegridcell_42',
        'lblDistance': 'mapPage_lblDistance',
        'mobilegridcell_43': 'mapPage_mobilegridcell_43',
        'inputDistance': 'mapPage_inputDistance',
        'mobilegridcell_44': 'mapPage_mobilegridcell_44',
        'lblFree': 'mapPage_lblFree',
        'mobilegridcell_45': 'mapPage_mobilegridcell_45',
        'selectFree': 'mapPage_selectFree',
        'selectFree-0': 'mapPage_selectFree-0',
        'mobilegridcell_49': 'mapPage_mobilegridcell_49',
        'lblBookingReqd': 'mapPage_lblBookingReqd',
        'mobilegridcell_50': 'mapPage_mobilegridcell_50',
        'selectBooking': 'mapPage_selectBooking',
        'selectBooking-0': 'mapPage_selectBooking-0',
        'mobilegridcell_61': 'mapPage_mobilegridcell_61',
        'lblSuitableFor': 'mapPage_lblSuitableFor',
        'mobilegridcell_62': 'mapPage_mobilegridcell_62',
        'selectSuitable': 'mapPage_selectSuitable',
        'selectSuitable-0': 'mapPage_selectSuitable-0',
        'mobilegridcell_66': 'mapPage_mobilegridcell_66',
        'lblActivity': 'mapPage_lblActivity',
        'mobilegridcell_67': 'mapPage_mobilegridcell_67',
        'selectActivity': 'mapPage_selectActivity',
        'selectActivity-0': 'mapPage_selectActivity-0',
        'btnFacetedSearch': 'mapPage_btnFacetedSearch'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fixing issue https://github.com/jquery/jquery-mobile/issues/5424 on Windows Phone
        $("div[data-role=page] div[data-role=footer]").css("bottom", "-36px");
    }

    if (Appery.getTargetPlatform == "I") {
        $.each(window.n2id, function(name, id) {
            var elApperyRole = $("#" + id).attr("data-role");
            if (elApperyRole != "appery_label" && elApperyRole != "appery_link") {
                var appleDataSelector = "#" + id + "[x-apple-data-detectors], #" + id + " [x-apple-data-detectors]";
                $(appleDataSelector).attr("x-apple-data-detectors", "false");
            }
        });
    }

    Appery.CurrentScreen = 'mapPage';

    /*
     * Nonvisual components
     */
    var datasources = [];

    KCActivitiesSearch = new Appery.DataSource(KCActivitiesSearchService, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("mapPage");
        },
        'onSuccess': function(data) {
            var homeLatlng = new google.maps.LatLng(51.470678, -0.078129);

            var myOptions = {
                zoom: 14,
                center: homeLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

            var map = new google.maps.Map($('div[dsid="googlemap_1"]').get(0), myOptions);

            //Home
            var marker = new google.maps.Marker({
                position: homeLatlng,
                map: map,
                title: "Home",
                icon: {
                    path: google.maps.SymbolPath.CIRCLE,
                    fillColor: 'blue',
                    scale: 5
                },
                draggable: false
            });

            locationHelper.aLocations = new Array();

            if (data.totalResultsSize > 0) {
                for (var i = 0; i < data.results.length; i++) {
                    var point = data.results[i];
                    var lat = point.location.latitude;
                    var lng = point.location.longitude;

                    locationHelper.aLocations.push([lat, lng]);
                }

                //  Create a new viewpoint bound and make markers
                var bounds = new google.maps.LatLngBounds();
                var marker, j;
                for (j = 0; j < locationHelper.aLocations.length; j++) {
                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng(locationHelper.aLocations[j][0], locationHelper.aLocations[j][1]),
                        map: map
                    });

                    bounds.extend(new google.maps.LatLng(locationHelper.aLocations[j][0], locationHelper.aLocations[j][1]));
                }

                // put home location in bounds too
                bounds.extend(homeLatlng);

                //  Fit these bounds to the map
                map.fitBounds(bounds);

                //map.refresh();
            }

            return;
        },
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['results'],
            'ID': 'grdResult',
            'SET': [{
                'PATH': ['displayAgeRange'],
                'ID': 'lblAgeRange',
                'ATTR': '@',
                'TRANSFORMATION': function(value, element) {
                    return "Ages: " + value;
                }
            }, {
                'PATH': ['venueName'],
                'ID': 'lblVenueName',
                'ATTR': '@'
            }, {
                'PATH': ['description'],
                'ID': 'lblDescription',
                'ATTR': '@'
            }, {
                'PATH': ['name'],
                'ID': 'lblActivityName',
                'ATTR': '@'
            }, {
                'PATH': ['id'],
                'ID': 'lblNada',
                'ATTR': '@'
            }, {
                'PATH': ['displayType'],
                'ID': 'lblActivityType',
                'ATTR': '@'
            }]
        }, {
            'PATH': ['totalResultsSize'],
            'ID': 'lblResults',
            'ATTR': '@',
            'TRANSFORMATION': function(value, element) {
                return value + " activities found";
            }
        }],
        'requestMapping': [{
            'PATH': ['search-query'],
            'TYPE': 'STRING',
            'ID': 'mobileSearchbar',
            'ATTR': 'value'
        }, {
            'PATH': ['search-dist'],
            'TYPE': 'STRING',
            'ID': 'inputDistance',
            'ATTR': 'value'
        }, {
            'PATH': ['search-book'],
            'TYPE': 'STRING',
            'ID': 'selectBooking',
            'ATTR': 'value'
        }, {
            'PATH': ['search-free'],
            'TYPE': 'STRING',
            'ID': 'selectFree',
            'ATTR': 'value'
        }, {
            'PATH': ['search-activity'],
            'TYPE': 'STRING',
            'ID': 'selectActivity',
            'ATTR': 'value'
        }, {
            'PATH': ['search-agerange'],
            'TYPE': 'STRING',
            'ID': 'selectSuitable',
            'ATTR': 'value'
        }]
    });

    datasources.push(KCActivitiesSearch);

    /*
     * Events and handlers
     */

    // Before Show
    mapPage_beforeshow = function() {
        Appery.CurrentScreen = "mapPage";
        for (var idx = 0; idx < datasources.length; idx++) {
            datasources[idx].__setupDisplay();
        }
    }

    // On Load
    screen_EECE_onLoad = mapPage_onLoad = function() {
        screen_EECE_elementsExtraJS();

        // TODO fire device events only if necessary (with JS logic)
        mapPage_deviceEvents();
        mapPage_windowEvents();
        screen_EECE_elementsEvents();
    }

    // screen window events
    screen_EECE_windowEvents = mapPage_windowEvents = function() {

        $('#mapPage').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });

    }

    // device events
    mapPage_deviceEvents = function() {

        document.addEventListener("deviceready", function() {

        });
    }

    // screen elements extra js
    screen_EECE_elementsExtraJS = mapPage_elementsExtraJS = function() {
        // screen (mapPage) extra code

        /* googlemap_1 */

        $("[name = 'googlemap_1']").wrap("<div/>");
        $("[name = 'googlemap_1']").parent().css("margin-left", $("[name = 'googlemap_1']").css("margin-left"));
        $("[name = 'googlemap_1']").parent().css("margin-right", $("[name = 'googlemap_1']").css("margin-right"));
        $("[name = 'googlemap_1']").css("margin-left", '0');
        $("[name = 'googlemap_1']").css("margin-right", '0');

        var googlemap_1_options = {
            markerSourceName: "googlemap_1_markers",
            latitude: "51.505836",
            longitude: "-0.116789",
            address: "",
            zoom: 14,
            showLocationMarker: true
        }

        Appery.__registerComponent('googlemap_1', new Appery.ApperyMapComponent("googlemap_1", googlemap_1_options));
        $("[name='googlemap_1_markers'] [apperytype='marker']").attr("reRender", "googlemap_1");
        $("[name='googlemap_1']").closest("[data-role='page']").bind({
            pageshow: function() {
                if (Appery('googlemap_1') != undefined) {
                    Appery('googlemap_1').refresh();
                }
            }
        });

        /* mobilelist_31 */

        listView = $("#mapPage_mobilelist_31");
        theme = listView.attr("data-theme");
        if (typeof theme !== 'undefined') {
            var themeClass = "ui-btn-up-" + theme;
            listItem = $("#mapPage_mobilelist_31 .ui-li-static");
            $.each(listItem, function(index, value) {
                $(this).addClass(themeClass);
            });
        }

        /* lstProfile */

        /* mobilelistitem_34 */

        /* mobilelistitem_36 */

        /* mobilelistitem_38 */

        /* selectFree */

        $("#mapPage_selectFree").parent().find("a.ui-btn").attr("tabindex", "18");

        /* selectBooking */

        $("#mapPage_selectBooking").parent().find("a.ui-btn").attr("tabindex", "17");

        /* selectSuitable */

        $("#mapPage_selectSuitable").parent().find("a.ui-btn").attr("tabindex", "19");

        /* selectActivity */

        $("#mapPage_selectActivity").parent().find("a.ui-btn").attr("tabindex", "20");

    }

    // screen elements handler
    screen_EECE_elementsEvents = mapPage_elementsEvents = function() {

        $("a :input,a a,a fieldset label").live({
            click: function(event) {
                event.stopPropagation();
            }
        });

        $('#mapPage_mobileheader [name="btnSettings"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    $('[id="mapPage_pnlSettings"]').panel("open");

                }
            },
            swiperight: function() {
                $('[id="mapPage_pnlSettings"]').panel("open");
            },
        });
        $('#mapPage_mobileheader [name="btnSearch"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    $('[id="mapPage_pnlSearch"]').panel("open");

                }
            },
            swipeleft: function() {
                $('[id="mapPage_pnlSearch"]').panel("open");
            },
        });

        $('#mapPage_mobilecontainer [name="mobileSearchbar"]').die().live({
            change: function() {
                try {
                    KCActivitiesSearch.execute({})
                } catch (ex) {
                    console.log(ex.name + '  ' + ex.message);
                    hideSpinner();
                };
            },
        });

        $('#mapPage_mobilecontainer [name="lblActivityName"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    setVar_('activityIdentifier', 'mapPage_lblNada', 'text', '', this);
                    Appery.navigateTo('activityDetail', {
                        reverse: false
                    });

                }
            },
        });

        $('#mapPage_mobilecontainer [name="imgActivity"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    setVar_('activityIdentifier', 'mapPage_lblNada', 'text', '', this);
                    Appery.navigateTo('activityDetail', {
                        reverse: false
                    });

                }
            },
        });
        
        $('[name="btnCloseSettings"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Appery("pnlSettings").panel("close");

                }
            },
        });

        $('[name="lstProfile"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Appery.navigateTo('profile', {
                        transition: 'slide',
                        reverse: false
                    });

                }
            },
        });

        $('[name="btnCloseSearch"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    Appery("pnlSearch").panel("close");

                }
            },
        });

        $('[name="btnFacetedSearch"]').die().live({
            click: function() {
                if (!$(this).attr('disabled')) {
                    try {
                        KCActivitiesSearch.execute({})
                    } catch (ex) {
                        console.log(ex.name + '  ' + ex.message);
                        hideSpinner();
                    };
                    Appery("pnlSearch").panel("close");

                }
            },
        });

    }

    $("#mapPage").die("pagebeforeshow").live("pagebeforeshow", function(event, ui) {
        mapPage_beforeshow();
    });

    if (runBeforeShow) {
        mapPage_beforeshow();
    } else {
        mapPage_onLoad();
    }

}

$("#mapPage").die("pageinit").live("pageinit", function(event, ui) {
    Appery.processSelectMenu($(this));
    mapPage_js();
});